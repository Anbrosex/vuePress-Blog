{"remainingRequest":"C:\\Users\\2499122241\\Desktop\\Blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\2499122241\\Desktop\\Blog\\docs\\.vuepress\\theme\\util\\index.js","dependencies":[{"path":"C:\\Users\\2499122241\\Desktop\\Blog\\docs\\.vuepress\\theme\\util\\index.js","mtime":1566744104677},{"path":"C:\\Users\\2499122241\\Desktop\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\2499122241\\Desktop\\Blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}